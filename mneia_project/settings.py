"""
Django settings for mneia_project project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

SECRET_KEY_PATH = Path.home() / "Mneia" / "mneia-config" / "django-secret"
SECRET_KEY = SECRET_KEY_PATH.read_text().strip()

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "django_musicbrainz_connector",
    "mneia_backend",
    "mneia_exporter",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "mneia_project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "mneia_project.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
DJANGO_MUSICBRAINZ_CONNECTOR_PASSWORD_PATH = (
    Path.home() / "Mneia" / "mneia-config" / "django-musicbrainz-connector-database-password"
)
DJANGO_MUSICBRAINZ_CONNECTOR_PASSWORD = DJANGO_MUSICBRAINZ_CONNECTOR_PASSWORD_PATH.read_text().strip()
MNEIA_BACKEND_PASSWORD_PATH = Path.home() / "Mneia" / "mneia-config" / "mneia-backend-database-password"
MNEIA_BACKEND_PASSWORD = MNEIA_BACKEND_PASSWORD_PATH.read_text().strip()
DATABASES = {
    "default": {
        "NAME": "mneia",
        "ENGINE": "django.db.backends.postgresql",
        "USER": "mneia",
        "PASSWORD": MNEIA_BACKEND_PASSWORD,
    },
    "musicbrainz_db": {
        "NAME": "musicbrainz_db",
        "ENGINE": "django.db.backends.postgresql",
        "USER": "django_musicbrainz_connector",
        "PASSWORD": DJANGO_MUSICBRAINZ_CONNECTOR_PASSWORD,
    },
}

DATABASE_ROUTERS = [
    "django_musicbrainz_connector.routers.DjangoMusicBrainzConnectorDatabaseRouter",
]

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
